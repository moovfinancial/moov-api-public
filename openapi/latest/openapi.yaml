openapi: 3.0.0
info:
  title: Moov API
  contact:
    name: Moov Developer Support
    email: help@moov.io
    url: https://moov.io
  license:
    name: Unlicensed
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  description: |-
    Moov is a platform that enables developers to integrate all aspects of money movement with ease and speed.
    The Moov API makes it simple for platforms to send, receive, and store money. Our API is based upon REST
    principles, returns JSON responses, and uses standard HTTP response codes. To learn more about how Moov
    works at a high level, read our [concepts](https://docs.moov.io/guides/get-started/glossary/) guide.
  version: latest
tags:
  - name: Authentication
  - name: Accounts
  - name: Capabilities
  - name: Cards
  - name: Transfers
paths:
  /accounts:
    post:
      operationId: createAccount
      description: |-
        You can create **business** or **individual** accounts for your users (i.e., customers, merchants) by passing the required
        information to Moov. Requirements differ per account type and requested [capabilities](https://docs.moov.io/guides/accounts/capabilities/requirements/).

        If you're requesting the `wallet`, `send-funds`, `collect-funds`, or `card-issuing` capabilities, you'll need to:
          + Send Moov the user [platform terms of service agreement](https://docs.moov.io/guides/accounts/requirements/platform-agreement/) acceptance.
            This can be done upon account creation, or by [patching](https://docs.moov.io/api/moov-accounts/accounts/patch/) the account using the `termsOfService` field.
        If you're creating a business account with the business type `llc`, `partnership`, or `privateCorporation`, you'll need to:
          + Provide [business representatives](https://docs.moov.io/api/moov-accounts/representatives/) after creating the account.
          + [Patch](https://docs.moov.io/api/moov-accounts/accounts/patch/) the account to indicate that business representative ownership information is complete.

        Visit our documentation to read more about [creating accounts](https://docs.moov.io/guides/accounts/create-accounts/) and [verification requirements](https://docs.moov.io/guides/accounts/requirements/identity-verification/).
        Note that the `mode` field (for production or sandbox) is only required when creating a _facilitator_ account. All non-facilitator account requests will ignore the mode field and be set to the calling facilitator's mode.
      parameters:
        - $ref: '#/components/parameters/CommonHeaders'
      responses:
        '200':
          description: The request completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
        '401':
          description: The request contained missing or expired authentication.
        '403':
          description: The user is not authorized to make the request.
        '404':
          description: The requested resource was not found.
        '409':
          description: The request conflicted with the current state of the target resource.
          content:
            application/json:
              schema:
                type: string
        '422':
          description: The request was well-formed, but the contents failed validation. Check the request for missing or invalid fields.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/CreateAccountError'
                required:
                  - error
        '429':
          description: Request was refused due to rate limiting.
      tags:
        - Accounts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAccount'
      security:
        - BasicAuth: []
        - OAuth2Auth:
            - /accounts.write
    get:
      operationId: listAccounts
      description: |-
        List or search accounts to which the caller is connected.

        All supported query parameters are optional. If none are provided the response will include all connected accounts.
        Pagination is supported via the `skip` and `count` query parameters.
        Searching by name and email will overlap and return results based on relevance.
      parameters:
        - $ref: '#/components/parameters/CommonHeaders'
        - $ref: '#/components/parameters/AccountsQuery.name'
        - $ref: '#/components/parameters/AccountsQuery.email'
        - $ref: '#/components/parameters/AccountsQuery.type'
        - $ref: '#/components/parameters/AccountsQuery.foreignID'
        - $ref: '#/components/parameters/AccountsQuery.includeDisconnected'
        - $ref: '#/components/parameters/AccountsQuery.capability'
        - $ref: '#/components/parameters/AccountsQuery.capabilityStatus'
        - name: skip
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/Skip'
          explode: false
        - name: count
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/Count'
          explode: false
      responses:
        '200':
          description: The request completed successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Account'
        '401':
          description: The request contained missing or expired authentication.
        '403':
          description: The user is not authorized to make the request.
        '429':
          description: Request was refused due to rate limiting.
      tags:
        - Accounts
      security:
        - BasicAuth: []
        - OAuth2Auth:
            - /accounts.read
  /accounts/{accountID}:
    get:
      operationId: getAccount
      description: Retrieves details for the account with the specified ID.
      parameters:
        - $ref: '#/components/parameters/CommonHeaders'
        - name: accountID
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: The request completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '401':
          description: The request contained missing or expired authentication.
        '403':
          description: The user is not authorized to make the request.
        '404':
          description: The requested resource was not found.
        '429':
          description: Request was refused due to rate limiting.
      tags:
        - Accounts
      security:
        - BasicAuth: []
        - OAuth2Auth:
            - /accounts/{accountID}/profile.read
  /accounts/{accountID}/capabilities:
    get:
      operationId: listAccountCapabilities
      description: |-
        Retrieve all the capabilities an account has requested.

        Read our [capabilities guide](https://docs.moov.io/guides/accounts/capabilities/) to learn more.
      parameters:
        - $ref: '#/components/parameters/CommonHeaders'
        - name: accountID
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: The request completed successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Capability'
        '401':
          description: The request contained missing or expired authentication.
        '403':
          description: The user is not authorized to make the request.
        '429':
          description: Request was refused due to rate limiting.
      tags:
        - Capabilities
      security:
        - BasicAuth: []
        - OAuth2Auth:
            - /accounts/{accountID}/capabilities.read
  /accounts/{accountID}/cards:
    post:
      operationId: linkCard
      description: |-
        Link a card to an existing Moov account. 

        Read our [accept card payments guide](https://docs.moov.io/guides/sources/cards/accept-card-payments/#link-a-card) to learn more.

        Only use this endpoint if you have provided Moov with a copy of your PCI attestation of compliance. 

        During card linking, the provided data will be verified by submitting a $0 authorization (account verification) request. 
        If `merchantAccountID` is provided, the authorization request will contain that account's statement descriptor and address. 
        Otherwise, the platform account's profile will be used. If no statement descriptor has been set, the authorization will 
        use the account's name instead.

        It is strongly recommended that callers include the `X-Wait-For` header, set to `payment-method`, if the newly linked 
        card is intended to be used right away. If this header is not included, the caller will need to poll the [List Payment 
        Methods](https://docs.moov.io/api/sources/payment-methods/list/)
        endpoint to wait for the new payment methods to be available for use.

        To use this endpoint from the browser, you'll need to specify the `/accounts/{accountID}/cards.write` scope
        when generating a [token](https://docs.moov.io/api/authentication/access-tokens/).
      parameters:
        - $ref: '#/components/parameters/CommonHeaders'
        - name: x-wait-for
          in: header
          required: false
          description: |-
            Optional header to wait for certain events, such as the creation of a payment method, to occur before returning a response.

            When this header is set to `payment-method`, the response will include any payment methods that were created for the newly 
            linked card in the `paymentMethods` field. Otherwise, the `paymentMethods` field will be omitted from the response.
          schema:
            $ref: '#/components/schemas/LinkCardWaitFor'
        - name: accountID
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: The request completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Card'
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
        '401':
          description: The request contained missing or expired authentication.
        '403':
          description: The user is not authorized to make the request.
        '404':
          description: The requested resource was not found.
        '409':
          description: The request conflicted with the current state of the target resource.
          content:
            application/json:
              schema:
                type: string
        '422':
          description: The request was well-formed, but the contents failed validation. Check the request for missing or invalid fields.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkCardError'
        '429':
          description: Request was refused due to rate limiting.
      tags:
        - Cards
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LinkCard'
      security:
        - BasicAuth: []
        - OAuth2Auth:
            - /accounts/{accountID}/cards.write
    get:
      operationId: listCards
      description: |-
        List all the active cards associated with a Moov account. Read our [accept card payments guide](https://docs.moov.io/guides/sources/cards/accept-card-payments/) to learn more.
        <br><br> To use this endpoint from the browser, you'll need to specify the `/accounts/{accountID}/cards.read` scope when generating a [token](https://docs.moov.io/api/authentication/access-tokens/).
      parameters:
        - $ref: '#/components/parameters/CommonHeaders'
        - name: accountID
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: The request completed successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Card'
        '401':
          description: The request contained missing or expired authentication.
        '403':
          description: The user is not authorized to make the request.
        '429':
          description: Request was refused due to rate limiting.
      tags:
        - Cards
      security:
        - BasicAuth: []
        - OAuth2Auth:
            - /accounts/{accountID}/cards.read
  /accounts/{accountID}/cards/{cardID}:
    get:
      operationId: getCard
      description: |-
        Fetch a specific card associated with a Moov account. Read our [accept card payments guide](https://docs.moov.io/guides/sources/cards/accept-card-payments/) to learn more.
        <br><br> To use this endpoint from the browser, you'll need to specify the `/accounts/{accountID}/cards.read` scope when generating a [token](https://docs.moov.io/api/authentication/access-tokens/).
      parameters:
        - $ref: '#/components/parameters/CommonHeaders'
        - name: accountID
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: cardID
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/CardID'
      responses:
        '200':
          description: The request completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Card'
        '401':
          description: The request contained missing or expired authentication.
        '403':
          description: The user is not authorized to make the request.
        '404':
          description: The requested resource was not found.
        '429':
          description: Request was refused due to rate limiting.
      tags:
        - Cards
      security:
        - BasicAuth: []
        - OAuth2Auth:
            - /accounts/{accountID}/cards.read
    patch:
      operationId: updateCard
      description: |-
        Update a linked card and/or resubmit it for verification. If a value is provided for CVV, 
        a new verification ($0 authorization) will be submitted for the card. Updating the expiration date or 
        address will update the information stored on file for the card but will not be verified. <br> 
        Read our [accept card payments guide](https://docs.moov.io/guides/sources/cards/accept-card-payments/#reverify-a-card) to learn more.
        Only use this endpoint if you have provided Moov with a copy of your PCI attestation of compliance. 
        <br><br> To use this endpoint from the browser, you'll need to specify the `/accounts/{accountID}/cards.write` scope when generating a [token](https://docs.moov.io/api/authentication/access-tokens/).
      parameters:
        - $ref: '#/components/parameters/CommonHeaders'
        - name: accountID
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: cardID
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/CardID'
      responses:
        '200':
          description: The request completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Card'
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
        '401':
          description: The request contained missing or expired authentication.
        '403':
          description: The user is not authorized to make the request.
        '404':
          description: The requested resource was not found.
        '409':
          description: The request conflicted with the current state of the target resource.
          content:
            application/json:
              schema:
                type: string
        '422':
          description: The request was well-formed, but the contents failed validation. Check the request for missing or invalid fields.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateCardError'
        '429':
          description: Request was refused due to rate limiting.
      tags:
        - Cards
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCard'
      security:
        - BasicAuth: []
        - OAuth2Auth:
            - /accounts/{accountID}/cards.write
    delete:
      operationId: disableCard
      description: |-
        Disables a card associated with a Moov account.
        <br><br> To use this endpoint from the browser, you'll need to specify the `/accounts/{accountID}/cards.write` scope when generating a [token](https://docs.moov.io/api/authentication/access-tokens/).
      parameters:
        - $ref: '#/components/parameters/CommonHeaders'
        - name: accountID
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: cardID
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/CardID'
      responses:
        '204':
          description: The request completed successfully, but there is no content to return.
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
        '401':
          description: The request contained missing or expired authentication.
        '403':
          description: The user is not authorized to make the request.
        '404':
          description: The requested resource was not found.
        '409':
          description: The request conflicted with the current state of the target resource.
          content:
            application/json:
              schema:
                type: string
        '429':
          description: Request was refused due to rate limiting.
      tags:
        - Cards
      security:
        - BasicAuth: []
        - OAuth2Auth:
            - /accounts/{accountID}/cards.write
  /accounts/{accountID}/transfers:
    get:
      operationId: listTransfersForAccount
      description: |-
        List all the transfers associated with a particular Moov account. Read our [transfers overview guide](https://docs.moov.io/guides/money-movement/overview/) to learn more. 

        To access this endpoint using a [token](https://docs.moov.io/api/authentication/access-tokens/) you'll need to specify the `/accounts/{accountID}/transfers.read` scope. The
        accountID included must match the accountID being requested. 

        When you run this request, you retrieve 200 transfers at a time. You can advance past a results set of 200 transfers by using the `skip` parameter (for example, if you set 
        `skip`= 10, you will see a results set of 200 transfers after the first 2000). If you are searching a high volume of transfers, the request will likely process very slowly. 
        To achieve faster performance, restrict the data as much as you can by using the `StartDateTime` and `EndDateTime` parameters for a limited period of time. You can run 
        multiple requests in smaller time window increments until you've retrieved all the transfers you need.
      parameters:
        - $ref: '#/components/parameters/CommonHeaders'
        - name: accountID
          in: path
          required: true
          description: Identifier for the account.
          schema:
            type: string
        - $ref: '#/components/parameters/TransferListFilters.accountIDs'
        - $ref: '#/components/parameters/TransferListFilters.status'
        - $ref: '#/components/parameters/TransferListFilters.startDateTime'
        - $ref: '#/components/parameters/TransferListFilters.endDateTime'
        - $ref: '#/components/parameters/TransferListFilters.groupID'
        - $ref: '#/components/parameters/TransferListFilters.refunded'
        - $ref: '#/components/parameters/TransferListFilters.disputed'
        - $ref: '#/components/parameters/TransferListFilters.skip'
        - $ref: '#/components/parameters/TransferListFilters.count'
      responses:
        '200':
          description: The request completed successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transfer'
        '401':
          description: The request contained missing or expired authentication.
        '403':
          description: The user is not authorized to make the request.
        '429':
          description: Request was refused due to rate limiting.
      tags:
        - Transfers
      security:
        - BasicAuth: []
        - OAuth2Auth:
            - /accounts/{accountID}/transfers.read
  /accounts/{accountID}/transfers/{transferID}:
    get:
      operationId: getTransferForAccount
      description: |-
        Retrieve full transfer details for an individual transfer of a particular Moov account. 

        Payment rail-specific details are included in the source and destination. Read our [transfers overview guide](https://docs.moov.io/guides/money-movement/overview/) to learn
        more. 

        To access this endpoint using a [token](https://docs.moov.io/api/authentication/access-tokens/) you'll need to specify the `/accounts/{accountID}/transfers.read` scope. The 
        accountID included must match the accountID being requested.
      parameters:
        - $ref: '#/components/parameters/CommonHeaders'
        - name: accountID
          in: path
          required: true
          description: Identifier for the account.
          schema:
            type: string
        - name: transferID
          in: path
          required: true
          description: Identifier for the transfer.
          schema:
            type: string
      responses:
        '200':
          description: The request completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transfer'
        '401':
          description: The request contained missing or expired authentication.
        '403':
          description: The user is not authorized to make the request.
        '404':
          description: The requested resource was not found.
        '429':
          description: Request was refused due to rate limiting.
      tags:
        - Transfers
      security:
        - BasicAuth: []
        - OAuth2Auth:
            - /accounts/{accountID}/transfers.read
  /oauth2/token:
    post:
      operationId: createAuthToken
      description: Use the `client_id` and `client_secret` to generate an access token.
      parameters: []
      responses:
        '200':
          description: The request completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessToken'
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
        '401':
          description: The request contained missing or expired authentication.
        '403':
          description: The user is not authorized to make the request.
        '404':
          description: The requested resource was not found.
        '409':
          description: The request conflicted with the current state of the target resource.
          content:
            application/json:
              schema:
                type: string
        '422':
          description: The request was well-formed, but the contents failed validation. Check the request for missing or invalid fields.
          content:
            application/json:
              schema: {}
        '429':
          description: Request was refused due to rate limiting.
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthTokenRequest'
      security:
        - BasicAuth: []
  /transfers:
    post:
      operationId: createTransfer
      description: |-
        Move money by providing the source, destination, and amount in the request body. 
        Read our [transfers overview guide](https://docs.moov.io/guides/money-movement/overview/) to learn more. 

        If you are running a **server-side** integration, you will use your API keys per our 
        [authentication guidelines](https://docs.moov.io/api/authentication/api-authentication/#server-side-basic-authentication). If you
        are running a **client-side** integration, you'll need to specify the `/accounts/{yourAccountID}/transfers.write` scope when generating
        a [token](https://docs.moov.io/api/authentication/access-tokens/). The accountID included must be your accountID. You can find your 
        accountID on the [Business details](https://dashboard.moov.io/settings/business) page.
      parameters:
        - $ref: '#/components/parameters/CommonHeaders'
        - name: x-idempotency-key
          in: header
          required: true
          description: Prevents duplicate transfers from being created.
          schema:
            type: string
            format: uuid
        - name: x-wait-for
          in: header
          required: false
          description: |-
            Optional header that indicates whether to return a synchronous response that includes full transfer and rail-specific details or an 
            asynchronous response indicating the transfer was created (this is the default response if the header is omitted).
          schema:
            $ref: '#/components/schemas/TransferWaitFor'
      responses:
        '200':
          description: The request completed successfully.
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/Transfer'
                  - $ref: '#/components/schemas/AsyncTransfer'
        '201':
          description: A transfer was successfully created but an error occurred while generating the synchronous response. The asynchronous response object will be returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncTransfer'
        '202':
          description: A transfer was successfully created but a timeout occurred while waiting for a synchronous response. Rail-specific details may be missing from the response object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transfer'
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
        '404':
          description: The requested resource was not found.
        '409':
          description: Attempted to create a transfer using a duplicate X-Idempotency-Key header.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transfer'
        '422':
          description: The request was well-formed, but the contents failed validation. Check the request for missing or invalid fields.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferValidationError'
        '429':
          description: Request was refused due to rate limiting.
      tags:
        - Transfers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTransfer'
      security:
        - BasicAuth: []
        - OAuth2Auth:
            - /accounts/{yourAccountID}/transfers.write
    get:
      operationId: listTransfers
      description: |-
        List all the transfers associated with a particular Moov account. 

        Read our [transfers overview guide](https://docs.moov.io/guides/money-movement/overview/) to learn more. 

        To use this endpoint from the browser, you'll need to specify the `/accounts/{yourAccountID}/transfers.read` scope when generating a 
        [token](https://docs.moov.io/api/authentication/access-tokens/). The accountID included must be your accountID. You can find your 
        accountID on the [Business details](https://dashboard.moov.io/settings/business) page.

        When you run this request, you retrieve 200 transfers at a time. You can advance past a results set of 200 transfers by using the 
        `skip` parameter (for example, if you set `skip`= 10, you will see a results set of 200 transfers after the first 2000). If you are 
        searching a high volume of transfers, the request will likely process very slowly. To achieve faster performance, restrict the data 
        as much as you can by using the `StartDateTime` and `EndDateTime` parameters for a limited period of time. You can run multiple 
        requests in smaller time window increments until you've retrieved all the transfers you need.
      parameters:
        - $ref: '#/components/parameters/CommonHeaders'
        - $ref: '#/components/parameters/TransferListFilters.accountIDs'
        - $ref: '#/components/parameters/TransferListFilters.status'
        - $ref: '#/components/parameters/TransferListFilters.startDateTime'
        - $ref: '#/components/parameters/TransferListFilters.endDateTime'
        - $ref: '#/components/parameters/TransferListFilters.groupID'
        - $ref: '#/components/parameters/TransferListFilters.refunded'
        - $ref: '#/components/parameters/TransferListFilters.disputed'
        - $ref: '#/components/parameters/TransferListFilters.skip'
        - $ref: '#/components/parameters/TransferListFilters.count'
      responses:
        '200':
          description: The request completed successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transfer'
        '401':
          description: The request contained missing or expired authentication.
        '403':
          description: The user is not authorized to make the request.
        '429':
          description: Request was refused due to rate limiting.
      tags:
        - Transfers
      security:
        - BasicAuth: []
        - OAuth2Auth:
            - /accounts/{yourAccountID}/transfers.read
  /transfers/{transferID}:
    get:
      operationId: getTransfer
      description: |-
        Retrieve full transfer details such as the amount, source, and destination. Payment rail-specific details are included in the source
        and destination. Read our [transfers overview guide](https://docs.moov.io/guides/money-movement/overview/) to learn more.

        To use this endpoint from the browser, you'll need to specify the `/accounts/{yourAccountID}/transfers.read` scope when generating a
        [token](https://docs.moov.io/api/authentication/access-tokens/). The accountID included must be your accountID. You can find your 
        accountID on the [Business details](https://dashboard.moov.io/settings/business) page.
      parameters:
        - $ref: '#/components/parameters/CommonHeaders'
        - name: transferID
          in: path
          required: true
          description: Identifier for the transfer.
          schema:
            type: string
        - name: accountID
          in: query
          required: false
          description: Identifier for a connected account. Must be provided when using a token and the value of `{accountID}` in the scopes is a connected account.
          schema:
            type: string
          explode: false
      responses:
        '200':
          description: The request completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transfer'
        '401':
          description: The request contained missing or expired authentication.
        '403':
          description: The user is not authorized to make the request.
        '404':
          description: The requested resource was not found.
        '429':
          description: Request was refused due to rate limiting.
      tags:
        - Transfers
      security:
        - BasicAuth: []
        - OAuth2Auth:
            - /accounts/{yourAccountID}/transfers.read
    patch:
      operationId: patchTransfer
      description: |-
        Update the metadata contained on a transfer. 

        Read our [transfers overview guide](https://docs.moov.io/guides/money-movement/overview/) to learn more. To use this endpoint from the browser, you'll 
        need to specify the `/accounts/{yourAccountID}/transfers.write` scope when generating a [token](https://docs.moov.io/api/authentication/access-tokens/). 
        The accountID included must be your facilitator accountID. You can find your accountID on the [Business details](https://dashboard.moov.io/settings/business) 
        page.
      parameters:
        - $ref: '#/components/parameters/CommonHeaders'
        - name: transferID
          in: path
          required: true
          description: Identifier for the transfer.
          schema:
            type: string
        - name: accountID
          in: query
          required: false
          description: Identifier for a connected account. Must be provided when using a token and the value of `{accountID}` in the scopes is a connected account.
          schema:
            type: string
          explode: false
      responses:
        '200':
          description: The request completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transfer'
        '401':
          description: The request contained missing or expired authentication.
        '403':
          description: The user is not authorized to make the request.
        '404':
          description: The requested resource was not found.
        '429':
          description: Request was refused due to rate limiting.
      tags:
        - Transfers
      security:
        - BasicAuth: []
        - OAuth2Auth:
            - /accounts/{yourAccountID}/transfers.write
components:
  parameters:
    AccountsQuery.capability:
      name: capability
      in: query
      required: false
      description: '  Filter connected accounts by the capability.'
      schema:
        $ref: '#/components/schemas/CapabilityID'
      explode: false
    AccountsQuery.capabilityStatus:
      name: capabilityStatus
      in: query
      required: false
      description: '  Filter connected accounts by the capability.'
      schema:
        $ref: '#/components/schemas/CapabilityStatus'
      explode: false
    AccountsQuery.email:
      name: email
      in: query
      required: false
      description: |2-
          Filter connected accounts by email address.

          Provide the full email address to filter by email.
      schema:
        type: string
      explode: false
    AccountsQuery.foreignID:
      name: foreignID
      in: query
      required: false
      description: '  Serves as an optional alias from a foreign/external system which can be used to reference this resource.'
      schema:
        type: string
      explode: false
    AccountsQuery.includeDisconnected:
      name: includeDisconnected
      in: query
      required: false
      description: |-
        Filter disconnected accounts.

        If true, the response will include disconnected accounts.
      schema:
        type: boolean
      explode: false
    AccountsQuery.name:
      name: name
      in: query
      required: false
      description: |-
        Filter connected accounts by name.

        If provided, this query will attempt to find matches against the following Account and Profile fields:
        <ul>
          <li>Account `displayName`</li>
          <li>Individual Profile `firstName`, `middleName`, and `lastName`</li>
          <li>Business Profile `legalBusinessName`</li>
        </ul>
      schema:
        type: string
      explode: false
    AccountsQuery.type:
      name: type
      in: query
      required: false
      description: |2-
          Filter connected accounts by AccountType.

          If the `type` parameter is used in combination with `name`, only the corresponding type's name fields will
          be searched. For example, if `type=business` and `name=moov`, the search will attempt to find matches against
          the display name and Business Profile name fields (`legalBusinessName`, and `doingBusinessAs`).
      schema:
        $ref: '#/components/schemas/AccountType'
      explode: false
    CommonHeaders:
      name: x-moov-version
      in: header
      required: false
      description: Specify an API version.
      schema:
        $ref: '#/components/schemas/Versions'
    TransferListFilters.accountIDs:
      name: accountIDs
      in: query
      required: false
      description: Optional, comma-separated account IDs by which the response is filtered based on whether the account ID is the source or destination.
      schema:
        type: array
        items:
          type: string
      explode: false
    TransferListFilters.count:
      name: count
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/Count'
      explode: false
    TransferListFilters.disputed:
      name: disputed
      in: query
      required: false
      description: Optional parameter to only return disputed transfers.
      schema:
        type: boolean
      explode: false
    TransferListFilters.endDateTime:
      name: endDateTime
      in: query
      required: false
      description: Optional date-time which exclusively filters all transfers created before this date-time.
      schema:
        type: string
        format: date-time
      explode: false
    TransferListFilters.groupID:
      name: groupID
      in: query
      required: false
      description: Optional ID to filter for transfers in the same group.
      schema:
        type: string
        format: uuid
      explode: false
    TransferListFilters.refunded:
      name: refunded
      in: query
      required: false
      description: Optional parameter to only return refunded transfers.
      schema:
        type: boolean
      explode: false
    TransferListFilters.skip:
      name: skip
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/Skip'
      explode: false
    TransferListFilters.startDateTime:
      name: startDateTime
      in: query
      required: false
      description: Optional date-time which inclusively filters all transfers created after this date-time.
      schema:
        type: string
        format: date-time
      explode: false
    TransferListFilters.status:
      name: status
      in: query
      required: false
      description: Optional parameter for filtering transfers by status.
      schema:
        $ref: '#/components/schemas/TransferStatus'
      explode: false
  schemas:
    ACHPaymentSettings:
      type: object
      required:
        - companyName
      properties:
        companyName:
          type: string
          example: WholeBodyFitness
          minLength: 1
          maxLength: 16
          pattern: '[a-zA-Z0-9.!*-+_\- ]+'
          description: The description that shows up on ACH transactions. This will default to the account's display name on account creation.
    AccessToken:
      type: object
      required:
        - access_token
        - expires_in
        - refresh_token
        - scope
        - token_type
      properties:
        access_token:
          type: string
          example: i1qxz68gu50zp4i8ceyxqogmq7y0yienm52351c6...
          description: String passed to the authorization server to gain access to the system.
        expires_in:
          type: integer
          format: int32
          example: 900
          description: Number of seconds for which the token is valid.
        refresh_token:
          type: string
          example: i1qxz68gu50zp4i8ceyxqogmq7y0yienm52351c6...
          description: String passed to the authorization server to gain access to the system.
        scope:
          type: string
          example: /accounts.write
          description: A space-delimited list of [scopes](https://docs.moov.io/api/authentication/scopes/) that are allowed.
        token_type:
          $ref: '#/components/schemas/TokenType'
    Account:
      type: object
      required:
        - accountID
        - mode
        - accountType
        - displayName
        - profile
        - verification
        - createdOn
        - updatedOn
      properties:
        accountID:
          type: string
          example: c520f1b9-0ba7-42f5-b977-248cdbe41c69
          format: uuid
          description: Unique identifier for this account.
        mode:
          $ref: '#/components/schemas/Mode'
        accountType:
          $ref: '#/components/schemas/AccountType'
        displayName:
          type: string
          example: Whole Body Fitness
          maxLength: 64
        profile:
          $ref: '#/components/schemas/Profile'
        metadata:
          type: object
          additionalProperties:
            type: string
          description: Free-form key-value pair list. Useful for storing information that is not captured elsewhere.
        termsOfService:
          $ref: '#/components/schemas/TermsOfService'
        capabilities:
          type: array
          items:
            $ref: '#/components/schemas/AccountCapability'
        verification:
          $ref: '#/components/schemas/Verification'
        foreignID:
          type: string
          maxLength: 64
          description: Optional alias from a foreign/external system which can be used to reference this resource.
        customerSupport:
          $ref: '#/components/schemas/CustomerSupport'
        settings:
          $ref: '#/components/schemas/Settings'
        createdOn:
          type: string
          format: date-time
          example: 2024-05-06T12:20:38.184Z
        updatedOn:
          type: string
          format: date-time
          example: 2024-05-06T12:20:38.184Z
        disconnectedOn:
          type: string
          format: date-time
          example: 2024-05-06T12:20:38.184Z
    AccountCapability:
      type: object
      required:
        - capability
        - status
      properties:
        capability:
          type: string
        status:
          type: string
      description: Describes an action or set of actions that an account is permitted to perform.
    AccountNameVerification:
      type: object
      required:
        - firstName
        - lastName
        - middleName
        - fullName
      properties:
        firstName:
          $ref: '#/components/schemas/CardVerificationResult'
        lastName:
          $ref: '#/components/schemas/CardVerificationResult'
        middleName:
          $ref: '#/components/schemas/CardVerificationResult'
        fullName:
          $ref: '#/components/schemas/CardVerificationResult'
      example:
        firstName: match
        lastName: match
        middleName: match
        fullName: match
      description: The results of submitting cardholder name to a card network for verification.
    AccountType:
      type: string
      enum:
        - individual
        - business
      example: business
      description: The type of entity represented by this account.
    AccountVerificationStatus:
      type: string
      enum:
        - unverified
        - pending
        - resubmit
        - review
        - verified
        - failed
      description: Possible states an account verification can be in.
      deprecated: true
    AchCompanyEntryDescription:
      type: string
      example: Gym dues
      minLength: 4
      maxLength: 10
      description: An optional override of the default NACHA company entry description for a transfer.
    AchException:
      type: object
      properties:
        code:
          type: string
        reason:
          type: string
        description:
          type: string
    AchOriginatingCompanyName:
      type: string
      example: Whole Body Fit
      minLength: 4
      maxLength: 16
      description: An optional override of the default NACHA company name for a transfer.
    AchTransactionDetails:
      type: object
      required:
        - status
        - traceNumber
      properties:
        status:
          $ref: '#/components/schemas/AchTransactionStatus'
        traceNumber:
          type: string
          example: '124782618117'
          maxLength: 15
        return:
          $ref: '#/components/schemas/AchException'
        correction:
          $ref: '#/components/schemas/AchException'
        companyEntryDescription:
          $ref: '#/components/schemas/AchCompanyEntryDescription'
        originatingCompanyName:
          $ref: '#/components/schemas/AchOriginatingCompanyName'
        secCode:
          $ref: '#/components/schemas/SecCode'
        initiatedOn:
          type: string
          format: date-time
        originatedOn:
          type: string
          format: date-time
        correctedOn:
          type: string
          format: date-time
        returnedOn:
          type: string
          format: date-time
        completedOn:
          type: string
          format: date-time
        debitHoldPeriod:
          $ref: '#/components/schemas/DebitHoldPeriod'
      description: ACH specific details about the transaction.
    AchTransactionStatus:
      type: string
      enum:
        - initiated
        - originated
        - corrected
        - returned
        - completed
      description: Status of a transaction within the ACH lifecycle.
    Address:
      type: object
      required:
        - addressLine1
        - city
        - stateOrProvince
        - postalCode
        - country
      properties:
        addressLine1:
          type: string
          example: 123 Main Street
          maxLength: 60
        addressLine2:
          type: string
          example: Apt 302
          maxLength: 32
        city:
          type: string
          example: Boulder
          maxLength: 24
        stateOrProvince:
          type: string
          example: CO
          maxLength: 2
        postalCode:
          type: string
          example: '80301'
          maxLength: 5
        country:
          type: string
          example: US
          maxLength: 2
    AddressError:
      type: object
      properties:
        addressLine1:
          type: string
        addressLine2:
          type: string
        city:
          type: string
        stateOrProvince:
          type: string
        postalCode:
          type: string
        country:
          type: string
    Amount:
      type: object
      required:
        - currency
        - value
      properties:
        currency:
          type: string
          example: USD
          description: A 3-letter ISO 4217 currency code.
        value:
          type: integer
          format: int64
          example: 1204
          description: |-
            Quantity in the smallest unit of the specified currency. 

            In USD this is cents, for example, $12.04 is 1204 and $0.99 is 99.
    AsyncTransfer:
      type: object
      required:
        - transferID
        - createdOn
      properties:
        transferID:
          type: string
          format: uuid
        createdOn:
          type: string
          format: date-time
    AuthTokenRequest:
      type: object
      required:
        - grant_type
        - scopes
      properties:
        grant_type:
          $ref: '#/components/schemas/GrantType'
        scopes:
          type: string
          example: /moov/support.read /moov/support.write
          description: A space delimited list of scopes
    BasicPaymentMethod:
      type: object
      required:
        - paymentMethodID
        - paymentMethodType
      properties:
        paymentMethodID:
          type: string
        paymentMethodType:
          $ref: '#/components/schemas/PaymentMethodType'
      example:
        paymentMethodID: 01234567-89ab-cdef-0123-456789abcdef
        paymentMethodType: moov-wallet
    BirthDateError:
      type: object
      properties:
        day:
          type: string
        month:
          type: string
        year:
          type: string
    BusinessProfile:
      type: object
      required:
        - legalBusinessName
        - description
        - ownersProvided
      properties:
        legalBusinessName:
          type: string
          example: Classbooker, LLC
          maxLength: 64
          description: The legal name under which the entity is registered.
        doingBusinessAs:
          type: string
          maxLength: 64
          description: A registered trade name under which the business operates, if different from its legal name.
        businessType:
          $ref: '#/components/schemas/BusinessType'
        address:
          $ref: '#/components/schemas/Address'
        phone:
          $ref: '#/components/schemas/PhoneNumber'
        email:
          $ref: '#/components/schemas/Email'
        website:
          type: string
          format: uri
          maxLength: 100
        description:
          type: string
          example: Local fitness gym paying out instructors
          minLength: 10
          maxLength: 100
        taxIDProvided:
          type: boolean
          description: Indicates whether a tax ID has been provided for this business.
        representatives:
          type: array
          items:
            $ref: '#/components/schemas/Representative'
        ownersProvided:
          type: boolean
        industryCodes:
          $ref: '#/components/schemas/IndustryCodes'
        primaryRegulator:
          $ref: '#/components/schemas/PrimaryRegulator'
      description: Describes a business.
    BusinessType:
      type: string
      enum:
        - soleProprietorship
        - unincorporatedAssociation
        - trust
        - publicCorporation
        - privateCorporation
        - llc
        - partnership
        - unincorporatedNonProfit
        - incorporatedNonProfit
        - governmentEntity
      example: llc
      description: The type of entity represented by this business.
    Capability:
      type: object
      required:
        - capability
        - accountID
        - status
        - createdOn
        - updatedOn
      properties:
        capability:
          $ref: '#/components/schemas/CapabilityID'
        accountID:
          type: string
          format: uuid
        status:
          $ref: '#/components/schemas/CapabilityStatus'
        requirements:
          type: array
          items:
            $ref: '#/components/schemas/CapabilityRequirement'
        disabledReason:
          type: string
        createdOn:
          type: string
          format: date-time
        updatedOn:
          type: string
          format: date-time
        disabledOn:
          type: string
          format: date-time
    CapabilityID:
      type: string
      enum:
        - transfers
        - send-funds
        - collect-funds
        - wallet
        - card-issuing
      description: Moov account capabilities.
    CapabilityRequirement:
      type: object
      required:
        - currentlyDue
      properties:
        currentlyDue:
          type: array
          items:
            $ref: '#/components/schemas/RequirementID'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/RequirementError'
      description: Represents individual and business data necessary to facilitate the enabling of a capability for an account.
    CapabilityStatus:
      type: string
      enum:
        - enabled
        - disabled
        - pending
        - in-review
      description: The status of the capability requested for an account.
    Card:
      type: object
      required:
        - cardID
        - fingerprint
        - brand
        - cardType
        - cardCategory
        - lastFourCardNumber
        - bin
        - expiration
        - holderName
        - billingAddress
        - cardVerification
        - issuer
        - issuerCountry
        - issuerURL
        - issuerPhone
        - cardOnFile
        - domesticPushToCard
        - domesticPullFromCard
      properties:
        cardID:
          $ref: '#/components/schemas/CardID'
        fingerprint:
          $ref: '#/components/schemas/CardFingerprint'
        brand:
          $ref: '#/components/schemas/CardBrand'
        cardType:
          $ref: '#/components/schemas/CardType'
        cardCategory:
          type: string
          description: |-
            The category or level of the card defined by the issuer.
            Examples include, but not limited to, "REWARDS", "TRADITIONAL REWARDS", "CLASSIC", and "CORPORATE PURCHASING".
        lastFourCardNumber:
          type: string
          minLength: 4
          maxLength: 4
          description: Last four digits of the card number
        bin:
          type: string
          minLength: 6
          maxLength: 8
          description: The first six to eight digits of the card number, which identifies the financial institution that issued the card.
        expiration:
          $ref: '#/components/schemas/CardExpiration'
        holderName:
          type: string
          description: The name of the cardholder as it appears on the card.
        billingAddress:
          $ref: '#/components/schemas/CardAddress'
        cardVerification:
          $ref: '#/components/schemas/CardVerification'
        issuer:
          type: string
          description: Financial institution that issued the card.
        issuerCountry:
          type: string
          description: Country where the card was issued.
        issuerURL:
          type: string
          format: uri
          description: URL of the issuer.
        issuerPhone:
          type: string
          description: Phone number of the issuer.
        commercial:
          type: boolean
          description: |-
            If true, the card is for commercial use, or associated with a business.
            If false, the card is associated with a general consumer.
        regulated:
          type: boolean
          description: |-
            If true, the card issuing bank is regulated, and the scheme fees for debit transactions will be limited based on the Durbin Amendment.
            If false, the card issuing bank is not regulated, and the scheme fees will not be limited.
        cardOnFile:
          type: boolean
          description: Indicates cardholder has authorized card to be stored for future payments.
        merchantAccountID:
          type: string
          format: uuid
        cardAccountUpdater:
          $ref: '#/components/schemas/CardAccountUpdater'
        domesticPushToCard:
          $ref: '#/components/schemas/DomesticPushToCard'
        domesticPullFromCard:
          $ref: '#/components/schemas/DomesticPullFromCard'
        paymentMethods:
          type: array
          items:
            $ref: '#/components/schemas/BasicPaymentMethod'
      example:
        cardID: 01234567-89ab-cdef-0123-456789abcdef
        fingerprint: 9948962d92a1ce40c9f918cd9ece3a22bde62fb325a2f1fe2e833969de672ba3
        brand: Visa
        cardType: credit
        cardCategory: CLASSIC
        lastFourCardNumber: '1234'
        bin: '123456'
        expiration:
          month: '01'
          year: '21'
        holderName: Jules Jackson
        billingAddress:
          addressLine1: 123 Main Street
          addressLine2: Apt 302
          city: Boulder
          stateOrProvince: CO
          postalCode: '80301'
          country: US
        cardVerification:
          cvv: match
          addressLine1: match
          postalCode: match
          accountName:
            firstName: match
            lastName: match
            middleName: match
            fullName: match
        issuer: GRINGOTTS BANK
        issuerCountry: US
        issuerURL: HTTPS://WWW.EXAMPLE.COM/
        issuerPhone: '8185551212'
        commercial: false
        regulated: false
        cardOnFile: true
        merchantAccountID: 01234567-89ab-cdef-0123-456789abcdef
        cardAccountUpdater:
          updatedOn: 2024-05-06T12:20:38.184Z
          updateType: number-update
        domesticPushToCard: standard
        domesticPullFromCard: supported
        paymentMethods:
          - paymentMethodID: 01234567-89ab-cdef-0123-456789abcdef
            paymentMethodType: card-payment
          - paymentMethodID: 01234567-89ab-cdef-0123-456789abcdef
            paymentMethodType: push-to-card
          - paymentMethodID: 01234567-89ab-cdef-0123-456789abcdef
            paymentMethodType: pull-from-card
      description: Describes a card on a Moov account.
    CardAccountUpdater:
      type: object
      properties:
        updatedOn:
          type: string
          format: date-time
        updateType:
          $ref: '#/components/schemas/CardUpdateReason'
      example:
        updatedOn: 2024-05-06T12:20:38.184Z
        updateType: number-update
      description: The results of the most recent card update request.
    CardAddress:
      type: object
      required:
        - postalCode
      properties:
        addressLine1:
          type: string
          maxLength: 60
        addressLine2:
          type: string
          maxLength: 32
        city:
          type: string
          maxLength: 24
        stateOrProvince:
          type: string
          maxLength: 2
        postalCode:
          type: string
          maxLength: 5
        country:
          type: string
          maxLength: 2
      example:
        addressLine1: 123 Main Street
        addressLine2: Apt 302
        city: Boulder
        stateOrProvince: CO
        postalCode: '80301'
        country: US
    CardAddressError:
      type: object
      properties:
        addressLine1:
          type: string
        addressLine2:
          type: string
        city:
          type: string
        stateOrProvince:
          type: string
        postalCode:
          type: string
        country:
          type: string
    CardBrand:
      type: string
      enum:
        - American Express
        - Discover
        - Mastercard
        - Visa
        - Unknown
      example: Visa
      description: The card brand.
    CardDynamicDescriptor:
      type: string
      example: WhlBdy *Yoga 11-12
      minLength: 4
      maxLength: 22
      description: An optional override of the default card statement descriptor for a transfer. Accounts must be enabled by Moov to set this field.
    CardExpiration:
      type: object
      required:
        - month
        - year
      properties:
        month:
          type: string
          minLength: 2
          maxLength: 2
        year:
          type: string
          minLength: 2
          maxLength: 2
      example:
        month: '01'
        year: '21'
      description: The expiration date of the card or token.
    CardExpirationError:
      type: object
      properties:
        month:
          type: string
        year:
          type: string
    CardFingerprint:
      type: string
      example: 9948962d92a1ce40c9f918cd9ece3a22bde62fb325a2f1fe2e833969de672ba3
      maxLength: 100
      description: |-
        Uniquely identifies a linked payment card or token.
        For Apple Pay, the fingerprint is based on the tokenized card number and may vary based on the user's device.
        This field can be used to identify specific payment methods across multiple accounts on your platform.
    CardID:
      type: string
      example: 01234567-89ab-cdef-0123-456789abcdef
      format: uuid
      description: ID of the card.
    CardPaymentSettings:
      type: object
      properties:
        statementDescriptor:
          type: string
          example: Whole Body Fitness
          minLength: 4
          maxLength: 22
          pattern: '[a-zA-Z0-9.!*-+_\- ]+'
          description: The description that shows up on credit card transactions. This will default to the accounts display name on account creation.
      description: User provided settings to manage card payments. This data is only allowed on a business account.
    CardTransactionDetails:
      type: object
      required:
        - status
      properties:
        status:
          $ref: '#/components/schemas/CardTransactionStatus'
        failureCode:
          $ref: '#/components/schemas/CardTransactionFailureCode'
        dynamicDescriptor:
          $ref: '#/components/schemas/CardDynamicDescriptor'
        transactionSource:
          $ref: '#/components/schemas/TransactionSource'
        initiatedOn:
          type: string
          format: date-time
        confirmedOn:
          type: string
          format: date-time
        settledOn:
          type: string
          format: date-time
        failedOn:
          type: string
          format: date-time
        canceledOn:
          type: string
          format: date-time
        completedOn:
          type: string
          format: date-time
        interchangeQualification:
          type: string
          example: Visa Signature and Visa Infinite (Spend not-qualified) Product 1
          description: The program assigned by the card network that determines the interchange rate for the transfer.
          deprecated: true
        feeProgram:
          type: string
          example: Visa Signature and Visa Infinite (Spend not-qualified) Product 1
          description: The program assigned by the card network that determines the interchange rate for the transfer.
      description: Card-specific details about the transaction.
    CardTransactionFailureCode:
      type: string
      enum:
        - call-issuer
        - do-not-honor
        - processing-error
        - invalid-transaction
        - invalid-amount
        - no-such-issuer
        - reenter-transaction
        - cvv-mismatch
        - lost-or-stolen
        - insufficient-funds
        - invalid-card-number
        - invalid-merchant
        - expired-card
        - incorrect-pin
        - transaction-not-allowed
        - suspected-fraud
        - amount-limit-exceeded
        - velocity-limit-exceeded
        - revocation-of-authorization
        - card-not-activated
        - issuer-not-available
        - could-not-route
        - cardholder-account-closed
        - unknown-issue
        - duplicate-transaction
    CardTransactionStatus:
      type: string
      enum:
        - initiated
        - confirmed
        - canceled
        - settled
        - failed
        - completed
      description: Status of a transaction within the card payment lifecycle.
    CardTransferDispute:
      type: object
      required:
        - disputeID
        - createdOn
        - amount
      properties:
        disputeID:
          type: string
          format: uuid
        createdOn:
          type: string
          format: date-time
        amount:
          $ref: '#/components/schemas/Amount'
      description: Details of a card dispute.
    CardTransferRefund:
      type: object
      required:
        - refundID
        - createdOn
        - updatedOn
        - status
        - amount
      properties:
        refundID:
          type: string
          format: uuid
          description: Identifier for the refund.
        createdOn:
          type: string
          format: date-time
        updatedOn:
          type: string
          format: date-time
        status:
          $ref: '#/components/schemas/RefundStatus'
        amount:
          $ref: '#/components/schemas/Amount'
        cardDetails:
          $ref: '#/components/schemas/RefundCardDetails'
      description: Details of a card refund.
    CardType:
      type: string
      enum:
        - debit
        - credit
        - prepaid
        - unknown
      example: credit
      description: The type of the card.
    CardUpdateReason:
      type: string
      enum:
        - unspecified
        - account-closed
        - contact-cardholder
        - expiration-update
        - no-change
        - no-match
        - number-update
      example: number-update
      description: The results of the card update request.
    CardVerification:
      type: object
      required:
        - cvv
        - addressLine1
        - postalCode
        - accountName
      properties:
        cvv:
          $ref: '#/components/schemas/CardVerificationResult'
        addressLine1:
          $ref: '#/components/schemas/CardVerificationResult'
        postalCode:
          $ref: '#/components/schemas/CardVerificationResult'
        accountName:
          $ref: '#/components/schemas/AccountNameVerification'
      example:
        cvv: match
        addressLine1: match
        postalCode: match
        accountName:
          firstName: match
          lastName: match
          middleName: match
          fullName: match
      description: The results of submitting cardholder data to a card network for verification.
    CardVerificationResult:
      type: string
      enum:
        - noMatch
        - match
        - notChecked
        - unavailable
        - partialMatch
      example: match
    Count:
      type: integer
      format: int64
      example: 20
      description: Limits the maximum number of results returned, or determines the page size when used with `skip` for pagination.
    CreateAccount:
      type: object
      required:
        - accountType
        - profile
      properties:
        accountType:
          $ref: '#/components/schemas/AccountType'
        profile:
          $ref: '#/components/schemas/CreateProfile'
        metadata:
          type: object
          additionalProperties:
            type: string
          description: Free-form key-value pair list. Useful for storing information that is not captured elsewhere.
        termsOfService:
          oneOf:
            - $ref: '#/components/schemas/TermsOfServiceToken'
            - $ref: '#/components/schemas/ManualTermsOfService'
        foreignID:
          type: string
          maxLength: 64
          description: Optional alias from a foreign/external system which can be used to reference this resource.
        customerSupport:
          $ref: '#/components/schemas/CustomerSupport'
        settings:
          $ref: '#/components/schemas/Settings'
        capabilities:
          type: array
          items:
            $ref: '#/components/schemas/CapabilityID'
    CreateAccountError:
      type: object
      properties:
        accountType:
          type: string
        profile:
          $ref: '#/components/schemas/CreateProfileError'
        metadata:
          type: string
        termsOfService:
          $ref: '#/components/schemas/TermsOfServiceError'
        foreignID:
          type: string
        customerSupport:
          $ref: '#/components/schemas/CustomerSupportError'
        settings:
          type: object
          properties:
            cardPayment:
              type: object
              properties:
                statementDescriptor:
                  type: string
            achPayment:
              type: object
              properties:
                companyName:
                  type: string
        capabilities:
          type: object
          additionalProperties:
            type: string
    CreateBusinessError:
      type: object
      properties:
        legalBusinessName:
          type: string
        doingBusinessAs:
          type: string
        businessType:
          type: string
        address:
          $ref: '#/components/schemas/AddressError'
        phone:
          $ref: '#/components/schemas/PhoneNumberError'
        email:
          type: string
        website:
          type: string
        description:
          type: string
        taxID:
          type: object
          properties:
            ein:
              type: object
              properties:
                number:
                  type: string
        industryCodes:
          type: object
          properties:
            naics:
              type: string
            sic:
              type: string
            mcc:
              type: string
        primaryRegulator:
          type: string
    CreateBusinessProfile:
      type: object
      required:
        - legalBusinessName
        - description
      properties:
        legalBusinessName:
          type: string
          example: Classbooker, LLC
          maxLength: 64
          description: The legal name under which the entity is registered.
        doingBusinessAs:
          type: string
          maxLength: 64
          description: A registered trade name under which the business operates, if different from its legal name.
        businessType:
          $ref: '#/components/schemas/BusinessType'
        address:
          $ref: '#/components/schemas/Address'
        phone:
          $ref: '#/components/schemas/PhoneNumber'
        email:
          $ref: '#/components/schemas/Email'
        website:
          type: string
          format: uri
          maxLength: 100
        description:
          type: string
          example: Local fitness gym paying out instructors
          minLength: 10
          maxLength: 100
        taxID:
          $ref: '#/components/schemas/TaxID'
        industryCodes:
          $ref: '#/components/schemas/IndustryCodes'
        primaryRegulator:
          $ref: '#/components/schemas/PrimaryRegulator'
    CreateIndividualError:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/IndividualNameError'
        phone:
          $ref: '#/components/schemas/PhoneNumberError'
        email:
          type: string
        address:
          $ref: '#/components/schemas/AddressError'
        birthDate:
          $ref: '#/components/schemas/BirthDateError'
        governmentID:
          type: object
          properties:
            ssn:
              type: object
              properties:
                full:
                  type: string
                lastFour:
                  type: string
            itin:
              type: object
              properties:
                full:
                  type: string
                lastFour:
                  type: string
    CreateIndividualProfile:
      type: object
      required:
        - name
      properties:
        name:
          $ref: '#/components/schemas/IndividualName'
        phone:
          $ref: '#/components/schemas/PhoneNumber'
        email:
          $ref: '#/components/schemas/Email'
        address:
          $ref: '#/components/schemas/Address'
        birthDate:
          type: object
          properties:
            day:
              type: integer
              example: 9
            month:
              type: integer
              example: 11
            year:
              type: integer
              example: 1989
          required:
            - day
            - month
            - year
        governmentID:
          $ref: '#/components/schemas/GovernmentID'
    CreateProfile:
      type: object
      properties:
        individual:
          $ref: '#/components/schemas/CreateIndividualProfile'
        business:
          $ref: '#/components/schemas/CreateBusinessProfile'
    CreateProfileError:
      type: object
      properties:
        individual:
          $ref: '#/components/schemas/CreateIndividualError'
        business:
          $ref: '#/components/schemas/CreateBusinessError'
    CreateTransfer:
      type: object
      required:
        - source
        - destination
        - amount
      properties:
        source:
          $ref: '#/components/schemas/CreateTransferSource'
        destination:
          $ref: '#/components/schemas/CreateTransferDestination'
        amount:
          $ref: '#/components/schemas/Amount'
        facilitatorFee:
          $ref: '#/components/schemas/TransferFacilitatorFee'
        description:
          type: string
          example: Pay Instructor for May 15 Class
          maxLength: 256
          description: An optional description of the transfer for your own internal use.
        metadata:
          type: object
          additionalProperties:
            type: string
          description: Free-form key-value pair list.
    CreateTransferDestination:
      type: object
      required:
        - paymentMethodID
      properties:
        paymentMethodID:
          type: string
        cardDetails:
          $ref: '#/components/schemas/CreateTransferDestinationCard'
        achDetails:
          $ref: '#/components/schemas/CreateTransferDestinationACH'
      description: The final stage of a transfer and the ultimate recipient of the funds.
    CreateTransferDestinationACH:
      type: object
      properties:
        companyEntryDescription:
          $ref: '#/components/schemas/AchCompanyEntryDescription'
        originatingCompanyName:
          $ref: '#/components/schemas/AchOriginatingCompanyName'
    CreateTransferDestinationCard:
      type: object
      properties:
        dynamicDescriptor:
          $ref: '#/components/schemas/CardDynamicDescriptor'
    CreateTransferSource:
      type: object
      properties:
        transferID:
          type: string
          format: uuid
          description: |-
            A `transferID` is used to create a [transfer group](https://docs.moov.io/guides/money-movement/transfer-groups/), 
            associating the new transfer with a parent transfer.
        paymentMethodID:
          type: string
          format: uuid
        cardDetails:
          $ref: '#/components/schemas/CreateTransferSourceCard'
        achDetails:
          $ref: '#/components/schemas/CreateTransferSourceACH'
      description: Where funds for a transfer originate. For the source, you must include either a `paymentMethodID` or a `transferID`.
    CreateTransferSourceACH:
      type: object
      properties:
        companyEntryDescription:
          $ref: '#/components/schemas/AchCompanyEntryDescription'
        originatingCompanyName:
          $ref: '#/components/schemas/AchOriginatingCompanyName'
        debitHoldPeriod:
          $ref: '#/components/schemas/DebitHoldPeriod'
        secCode:
          $ref: '#/components/schemas/SecCode'
    CreateTransferSourceCard:
      type: object
      properties:
        dynamicDescriptor:
          $ref: '#/components/schemas/CardDynamicDescriptor'
        transactionSource:
          $ref: '#/components/schemas/TransactionSource'
    CustomerSupport:
      type: object
      properties:
        phone:
          $ref: '#/components/schemas/PhoneNumber'
        email:
          $ref: '#/components/schemas/Email'
        address:
          $ref: '#/components/schemas/Address'
        website:
          type: string
          format: uri
      description: |-
        User-provided information that can be displayed on credit card transactions for customers to use when
        contacting a customer support team. This data is only allowed on a business account.
    CustomerSupportError:
      type: object
      properties:
        phone:
          $ref: '#/components/schemas/PhoneNumberError'
        email:
          type: string
        address:
          $ref: '#/components/schemas/AddressError'
        website:
          type: string
    DebitHoldPeriod:
      type: string
      enum:
        - no-hold
        - 1-day
        - 2-days
      example: 2-days
      description: An optional override of your default ACH hold period in banking days. The hold period must be longer than or equal to your default setting.
    Document:
      type: object
      required:
        - documentID
        - type
        - contentType
        - uploadedAt
      properties:
        documentID:
          type: string
          example: e07e83e8-9429-4e99-ac99-c941f719eb39
          format: uuid
        type:
          $ref: '#/components/schemas/DocumentType'
        contentType:
          type: string
          example: application/pdf
          description: The document's MIME type.
        parseErrors:
          type: array
          items:
            type: string
          description: Optional array of errors encountered during automated parsing.
        uploadedAt:
          type: string
          format: date-time
          example: 2024-05-06T12:20:38.184Z
    DocumentType:
      type: string
      enum:
        - DriversLicense
        - Passport
        - UtilityBill
        - BankStatement
      example: BankStatement
      description: Types of documents that can be uploaded.
    DomesticPullFromCard:
      type: string
      enum:
        - not-supported
        - supported
        - unknown
      example: supported
      description: Indicates if the card supports domestic pull-from-card transfer.
    DomesticPushToCard:
      type: string
      enum:
        - not-supported
        - standard
        - fast-funds
        - unknown
      example: standard
      description: Indicates which level of domestic push-to-card transfer is supported by the card, if any.
    Email:
      type: string
      example: jordan.lee@classbooker.dev
      maxLength: 255
      format: email
    End2EndEncryption:
      type: object
      required:
        - token
      properties:
        token:
          type: string
          format: JWE
      example:
        token: eyJhbGciOiJFQ0RILUVTK0EyNTZLVyIsImVuYyI6IkEyNTZHQ00iLCJlcGsiOnsia3R5IjoiRUMiLCJjcnYiOiJQLTUyMSIsIngiOiJBS0NYVDM1WVdvTm8wbzExNy1SU0dqUGg3alN1NjFmLUhnYkx1dW0xVG1ueTRlcW5yX2hyU0hpY0w1d3gwODRCWDBRZjVTdEtkRUoydzY2ZUJqWHprRV9OIiwieSI6IkFIMEJfT2RaYTQtbG43dGJ4M3VBdlc1NDNQRE9HUXBCTDloRFFNWjlTQXNfOW05UWN3dnhRd1hrb1VrM3VzT1FnVV9ySVFrNFRoZ1NTUzV4UlhKcm5ZaTkifSwia2lkIjoiYmRvV3pLekpKUGw0TVFIaENDa05WYTZlZ1dmYi02V1haSjZKTFZqQ0hWMD0ifQ.HalyoHsfufBJEODd2lD9ThQvvVWw3b2kgWDLHGxmHhMv8rODyLL_Ug.rpQP178t8Ed_pUU2.Sn9UFeVoegAxiMUv11q7l3M0y9YHSLYi2n_JB7n7Pc777_47-icfaxstJemT0IC81w.akkq1EBxzWkBr4vEomSpWA
      description: |-
        Optional and only used if planning to use End to End Encryption to pass PCI data through an intermediary. 
        This is the output of using compact serialization of a JWE token that wraps an AES key and uses the public key returned from /end-to-end-keys.
        Examples of how to create this token can be found on our [GitHub](https://github.com/moovfinancial/moov-go/blob/main/examples/e2ee/e2ee_test.go).
        Body for a JWE token following [RFC](https://datatracker.ietf.org/doc/html/rfc7516).
    End2EndEncryptionError:
      type: object
      properties:
        token:
          type: string
    End2EndEncryptionUpdate:
      type: object
      properties:
        token:
          type: string
          format: JWE
      example:
        token: eyJhbGciOiJFQ0RILUVTK0EyNTZLVyIsImVuYyI6IkEyNTZHQ00iLCJlcGsiOnsia3R5IjoiRUMiLCJjcnYiOiJQLTUyMSIsIngiOiJBS0NYVDM1WVdvTm8wbzExNy1SU0dqUGg3alN1NjFmLUhnYkx1dW0xVG1ueTRlcW5yX2hyU0hpY0w1d3gwODRCWDBRZjVTdEtkRUoydzY2ZUJqWHprRV9OIiwieSI6IkFIMEJfT2RaYTQtbG43dGJ4M3VBdlc1NDNQRE9HUXBCTDloRFFNWjlTQXNfOW05UWN3dnhRd1hrb1VrM3VzT1FnVV9ySVFrNFRoZ1NTUzV4UlhKcm5ZaTkifSwia2lkIjoiYmRvV3pLekpKUGw0TVFIaENDa05WYTZlZ1dmYi02V1haSjZKTFZqQ0hWMD0ifQ.HalyoHsfufBJEODd2lD9ThQvvVWw3b2kgWDLHGxmHhMv8rODyLL_Ug.rpQP178t8Ed_pUU2.Sn9UFeVoegAxiMUv11q7l3M0y9YHSLYi2n_JB7n7Pc777_47-icfaxstJemT0IC81w.akkq1EBxzWkBr4vEomSpWA
      description: |-
        Optional and only used if planning to use End to End Encryption to pass PCI data through an intermediary. 
        This is the output of using compact serialization of a JWE token that wraps an AES key and uses the public key returned from /end-to-end-keys.
        Examples of how to create this token can be found on our [GitHub](https://github.com/moovfinancial/moov-go/blob/main/examples/e2ee/e2ee_test.go).
        Body for a JWE token following [RFC](https://datatracker.ietf.org/doc/html/rfc7516).
    GenericError:
      type: object
      required:
        - error
      properties:
        error:
          type: string
    GovernmentID:
      type: object
      properties:
        ssn:
          type: object
          properties:
            full:
              type: string
              pattern: ^\d{3}[-]?\d{2}[-]?\d{4}$
            lastFour:
              type: string
        itin:
          type: object
          properties:
            full:
              type: string
              pattern: ^\d{3}[-]?\d{2}[-]?\d{4}$
            lastFour:
              type: string
    GrantType:
      type: string
      enum:
        - client_credentials
        - refresh_token
      description: The type of grant being requested.
    IndividualName:
      type: object
      required:
        - firstName
        - lastName
      properties:
        firstName:
          type: string
          example: Jordan
          maxLength: 64
          description: The individual's first given name.
        middleName:
          type: string
          example: Reese
          maxLength: 64
          description: The individual's second given name, if any.
        lastName:
          type: string
          example: Lee
          maxLength: 64
          description: The individual's family name.
        suffix:
          type: string
          example: Jr
          maxLength: 20
          description: Suffix of a given name.
    IndividualNameError:
      type: object
      properties:
        firstName:
          type: string
        middleName:
          type: string
        lastName:
          type: string
        suffix:
          type: string
    IndividualProfile:
      type: object
      required:
        - name
      properties:
        name:
          $ref: '#/components/schemas/IndividualName'
        phone:
          $ref: '#/components/schemas/PhoneNumber'
        email:
          $ref: '#/components/schemas/Email'
        address:
          $ref: '#/components/schemas/Address'
        birthDateProvided:
          type: boolean
          description: Indicates whether this individual's birth date has been provided.
        governmentIDProvided:
          type: boolean
          description: Indicates whether a government ID (SSN, ITIN, etc.) has been provided for this individual.
      description: Describes an individual.
    IndustryCodes:
      type: object
      required:
        - naics
        - sic
        - mcc
      properties:
        naics:
          type: string
          example: '713940'
          minLength: 2
          maxLength: 6
        sic:
          type: string
          example: '7991'
          minLength: 4
          maxLength: 4
        mcc:
          type: string
          example: '7997'
          minLength: 4
          maxLength: 4
    LinkCard:
      type: object
      required:
        - cardNumber
        - cardCvv
        - expiration
        - billingAddress
      properties:
        e2ee:
          $ref: '#/components/schemas/End2EndEncryption'
        cardNumber:
          type: string
        cardCvv:
          type: string
        expiration:
          $ref: '#/components/schemas/CardExpiration'
        holderName:
          type: string
        billingAddress:
          $ref: '#/components/schemas/CardAddress'
        cardOnFile:
          type: boolean
        merchantAccountID:
          type: string
        verifyName:
          type: boolean
      example:
        cardNumber: '4111111111111111'
        cardCvv: '123'
        expiration:
          month: '01'
          year: '21'
        holderName: Jules Jackson
        billingAddress:
          addressLine1: 123 Main Street
          addressLine2: Apt 302
          city: Boulder
          stateOrProvince: CO
          postalCode: '80301'
          country: US
        cardOnFile: true
        merchantAccountID: 01234567-89ab-cdef-0123-456789abcdef
        verifyName: true
    LinkCardError:
      type: object
      properties:
        error:
          type: string
        e2ee:
          $ref: '#/components/schemas/End2EndEncryptionError'
        cardNumber:
          type: string
        cardCvv:
          type: string
        expiration:
          $ref: '#/components/schemas/CardExpirationError'
        holderName:
          type: string
        billingAddress:
          $ref: '#/components/schemas/CardAddressError'
        cardOnFile:
          type: string
        merchantAccountID:
          type: string
        verifyName:
          type: string
    LinkCardWaitFor:
      type: string
      enum:
        - payment-method
      example: payment-method
    ManualTermsOfService:
      type: object
      required:
        - acceptedDate
        - acceptedIP
        - acceptedUserAgent
        - acceptedDomain
      properties:
        acceptedDate:
          type: string
          format: date-time
          description: The date and time the terms of service were accepted.
        acceptedIP:
          type: string
          example: 172.217.2.46
          format: ipv4
          description: The IP address from which the terms of service were accepted.
        acceptedUserAgent:
          type: string
          example: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/94.0.4606.71 Safari/537.36
          maxLength: 255
          description: The user-agent of the user making the request.
        acceptedDomain:
          type: string
          format: uri
      description: Describes the acceptance of the Terms of Service. All data is required, and must be from the user.
    ManualToSError:
      type: object
      properties:
        acceptedDate:
          type: string
        acceptedDomain:
          type: string
        acceptedIP:
          type: string
        acceptedUserAgent:
          type: string
    Mode:
      type: string
      enum:
        - sandbox
        - production
      example: production
      description: The operating mode for an account.
    MoovFeeDetails:
      type: object
      required:
        - moovProcessing
      properties:
        cardScheme:
          type: string
          description: Card scheme fees accrued during authorization and settlement. String type represents dollars with up to 9 decimal place precision.
        interchange:
          type: string
          description: Network interchange fee for Visa, Mastercard, or Discover. String type represents dollars with up to 9 decimal place precision.
        discount:
          type: string
          description: Network discount fee for American Express. String type represents dollars with up to 9 decimal place precision.
        moovProcessing:
          type: string
          description: Moov processing fee. String type represents dollars with up to 9 decimal place precision.
      description: Processing and pass-through costs that add up to the moovFee.
    PatchTransfer:
      type: object
      properties:
        metadata:
          type: object
          additionalProperties:
            type: string
    PaymentMethodType:
      type: string
      enum:
        - moov-wallet
        - ach-debit-fund
        - ach-debit-collect
        - ach-credit-standard
        - ach-credit-same-day
        - rtp-credit
        - card-payment
        - apple-pay
        - push-to-card
        - pull-from-card
    PhoneNumber:
      type: object
      properties:
        number:
          type: string
          example: '8185551212'
          maxLength: 10
        countryCode:
          type: string
          example: '1'
          maxLength: 1
    PhoneNumberError:
      type: object
      properties:
        number:
          type: string
        countryCode:
          type: string
    PrimaryRegulator:
      type: string
      enum:
        - OCC
        - FDIC
        - NCUA
        - FRB
      description: If the business is a financial institution, this field describes its primary regulator.
    Profile:
      type: object
      properties:
        individual:
          $ref: '#/components/schemas/IndividualProfile'
        business:
          $ref: '#/components/schemas/BusinessProfile'
      description: Describes a Moov account profile. A profile will have a business or an individual, depending on the account's type.
    RefundCardDetails:
      type: object
      required:
        - status
      properties:
        status:
          $ref: '#/components/schemas/RefundCardStatus'
        failureCode:
          $ref: '#/components/schemas/CardTransactionFailureCode'
        initiatedOn:
          type: string
          format: date-time
        confirmedOn:
          type: string
          format: date-time
        settledOn:
          type: string
          format: date-time
        failedOn:
          type: string
          format: date-time
        completedOn:
          type: string
          format: date-time
    RefundCardStatus:
      type: string
      enum:
        - initiated
        - confirmed
        - settled
        - failed
        - completed
    RefundStatus:
      type: string
      enum:
        - created
        - pending
        - completed
        - failed
    Representative:
      type: object
      required:
        - representativeID
        - name
        - email
        - createdOn
        - updatedOn
      properties:
        representativeID:
          type: string
          format: uuid
          description: Unique identifier for this representative.
        name:
          $ref: '#/components/schemas/IndividualName'
        phone:
          $ref: '#/components/schemas/PhoneNumber'
        email:
          type: string
          maxLength: 255
          format: email
        address:
          $ref: '#/components/schemas/Address'
        birthDateProvided:
          type: boolean
          description: Indicates whether this representative's birth date has been provided.
        governmentIDProvided:
          type: boolean
          description: Indicates whether a government ID (SSN, ITIN, etc.) has been provided for this representative.
        responsibilities:
          $ref: '#/components/schemas/RepresentativeResponsibilities'
        createdOn:
          type: string
          format: date-time
        updatedOn:
          type: string
          format: date-time
        disabledOn:
          type: string
          format: date-time
      description: Describes a business representative.
    RepresentativeResponsibilities:
      type: object
      required:
        - ownershipPercentage
        - jobTitle
      properties:
        isController:
          type: boolean
          description: Indicates whether this individual has significant management responsibilities within the business.
        isOwner:
          type: boolean
          description: |-
            If `true`, this field indicates that the individual has a business ownership stake of at least 25% in the
            business. If the representative does not own at least 25% of the business, this field should be `false`.
        ownershipPercentage:
          type: integer
          example: 38
          description: The percentage of ownership this individual has in the business (required if `isOwner` is `true`).
        jobTitle:
          type: string
          example: CEO
          maxLength: 64
      description: Describes the job responsibilities of a business representative.
    RequirementError:
      type: object
      required:
        - requirement
      properties:
        requirement:
          $ref: '#/components/schemas/RequirementID'
        errorCode:
          $ref: '#/components/schemas/RequirementErrorCode'
    RequirementErrorCode:
      type: string
      enum:
        - invalid-value
        - failed-automatic-verification
        - failed-other
        - invalid-address
        - address-restricted
        - tax-id-mismatch
        - document-id-mismatch
        - document-date-of-birth-mismatch
        - document-name-mismatch
        - document-address.mismatch
        - document-number-mismatch
        - document-incomplete
        - document-failed-risk
        - document-illegible
        - document-unsupported
        - document-not-uploaded
        - document-corrupt
        - document-expired
    RequirementID:
      type: string
      enum:
        - account.tos-acceptance
        - individual.mobile
        - individual.email
        - individual.email-or-mobile
        - individual.firstname
        - individual.lastname
        - individual.address
        - individual.ssn-last4
        - individual.ssn
        - individual.birthdate
        - business.legalname
        - business.description-or-website
        - business.entity-type
        - business.business-type
        - business.dba
        - business.ein
        - business.address
        - business.phone
        - business.admins
        - business.controllers
        - business.owners
        - business.classification
        - business.industry-code-mcc
        - business.indicate-owners-provided
        - business.average-transaction-size
        - business.max-transaction-size
        - business.average-monthly-transaction-volume
        - business.volume-by-customer-type
        - business.card-volume-distribution
        - business.fulfillment
        - business.description
        - business.underwriting-documents-tier-one
        - bank-accounts.name
        - bank-accounts.routing-number
        - bank-accounts.account-number
        - document.business.verification
        - document.individual.tin
        - document.individual.verification
        - document.representative.{rep-uuid}.tin
        - document.representative.{rep-uuid}.verification
        - representative.{rep-uuid}.mobile
        - representative.{rep-uuid}.email
        - representative.{rep-uuid}.email-or-mobile
        - representative.{rep-uuid}.firstname
        - representative.{rep-uuid}.lastname
        - representative.{rep-uuid}.address
        - representative.{rep-uuid}.ssn-last4
        - representative.{rep-uuid}.ssn
        - representative.{rep-uuid}.birthdate
        - representative.{rep-uuid}.job-title
        - representative.{rep-uuid}.is-controller
        - representative.{rep-uuid}.is-owner
        - representative.{rep-uuid}.ownership
        - document.{doc-uuid}
      description: The unique ID of what the requirement is asking to be filled out.
    RtpFailureCode:
      type: string
      enum:
        - processing-error
        - invalid-account
        - account-closed
        - account-blocked
        - invalid-field
        - transaction-not-supported
        - limit-exceeded
        - invalid-amount
        - customer-deceased
        - other
      description: Status codes for RTP failures.
    RtpTransactionDetails:
      type: object
      required:
        - status
      properties:
        status:
          $ref: '#/components/schemas/RtpTransactionStatus'
        networkResponseCode:
          type: string
          description: Response code returned by network on failure.
        failureCode:
          $ref: '#/components/schemas/RtpFailureCode'
        initiatedOn:
          type: string
          format: date-time
        completedOn:
          type: string
          format: date-time
        failedOn:
          type: string
          format: date-time
        acceptedWithoutPostingOn:
          type: string
          format: date-time
      description: RTP specific details about the transaction.
    RtpTransactionStatus:
      type: string
      enum:
        - initiated
        - completed
        - failed
        - accepted-without-posting
      description: Status of a transaction within the RTP lifecycle.
    SecCode:
      type: string
      enum:
        - WEB
        - PPD
        - CCD
        - TEL
      description: Code used to identify the ACH authorization method.
    Settings:
      type: object
      properties:
        cardPayment:
          $ref: '#/components/schemas/CardPaymentSettings'
        achPayment:
          $ref: '#/components/schemas/ACHPaymentSettings'
      description: User provided settings to manage an account.
    Skip:
      type: integer
      format: int64
      example: 60
      description: The number of entries to skip when paginating a large result set.
    TaxID:
      type: object
      required:
        - ein
      properties:
        ein:
          type: object
          properties:
            number:
              type: string
              example: 12-3456789
          required:
            - number
      description: An EIN (employer identification number) for the business. For sole proprietors, an SSN can be used as the EIN.
    TermsOfService:
      type: object
      required:
        - acceptedDate
        - acceptedIP
      properties:
        acceptedDate:
          type: string
          format: date-time
          description: The date and time the terms of service were accepted.
        acceptedIP:
          type: string
          example: 172.217.2.46
          format: ipv4
          description: The IP address from which the terms of service were accepted.
      description: Describes the acceptance of the Terms of Service.
    TermsOfServiceError:
      type: object
      properties:
        token:
          type: string
        manual:
          type: object
          properties:
            acceptedDate:
              type: string
            acceptedDomain:
              type: string
            acceptedIP:
              type: string
            acceptedUserAgent:
              type: string
    TermsOfServiceToken:
      type: object
      required:
        - token
      properties:
        token:
          type: string
          example: kgT1uxoMAk7QKuyJcmQE8nqW_HjpyuXBabiXPi6T83fUQoxsyWYPcYzuHQTqrt7YRp4gCwyDQvb6U5REM9Pgl2EloCe35t-eiMAbUWGo3Kerxme6aqNcKrP_6-v0MTXViOEJ96IBxPFTvMV7EROI2dq3u4e-x4BbGSCedAX-ViAQND6hcreCDXwrO6sHuzh5Xi2IzSqZHxaovnWEboaxuZKRJkA3dsFID6fzitMpm2qrOh4
      description: An encrypted value used to record acceptance of Moov's Terms of Service.
    TokenType:
      type: string
      enum:
        - opaque
        - jwt
      example: opaque
      description: Type of token returned.
    TransactionSource:
      type: string
      enum:
        - first-recurring
        - recurring
        - unscheduled
      description: |-
        Specifies the nature and initiator of a transaction. 

        Crucial for recurring and merchant-initiated transactions as per card scheme rules. 
        Omit for customer-initiated e-commerce transactions.
    Transfer:
      type: object
      required:
        - transferID
        - createdOn
        - status
        - amount
      properties:
        transferID:
          type: string
          format: uuid
        createdOn:
          type: string
          format: date-time
        source:
          $ref: '#/components/schemas/TransferSource'
        destination:
          $ref: '#/components/schemas/TransferDestination'
        completedOn:
          type: string
          format: date-time
        status:
          $ref: '#/components/schemas/TransferStatus'
        failureReason:
          $ref: '#/components/schemas/TransferFailureReason'
        amount:
          $ref: '#/components/schemas/Amount'
        description:
          type: string
          example: Pay Instructor for May 15 Class
          maxLength: 128
          description: An optional description of the transfer for your own internal use.
        metadata:
          type: object
          additionalProperties:
            type: string
        facilitatorFee:
          $ref: '#/components/schemas/TransferFacilitatorFee'
        moovFee:
          type: integer
          format: int64
          description: Fees charged to your platform account for transfers.
        moovFeeDecimal:
          type: integer
          format: int64
          description: Same as `moovFee`, but a decimal-formatted numerical string that represents up to 9 decimal place precision.
        moovFeeDetails:
          $ref: '#/components/schemas/MoovFeeDetails'
        groupID:
          type: string
        refundedAmount:
          $ref: '#/components/schemas/Amount'
        refunds:
          type: array
          items:
            $ref: '#/components/schemas/CardTransferRefund'
        disputedAmount:
          $ref: '#/components/schemas/Amount'
        disputes:
          type: array
          items:
            $ref: '#/components/schemas/CardTransferDispute'
        sweepID:
          type: string
        scheduleID:
          type: string
        occurrenceID:
          type: string
      description: Details of a Transfer.
    TransferAccount:
      type: object
      required:
        - accountID
        - email
        - displayName
      properties:
        accountID:
          type: string
        email:
          type: string
        displayName:
          type: string
    TransferDestination:
      type: object
      required:
        - paymentMethodID
        - paymentMethodType
        - account
      properties:
        paymentMethodID:
          type: string
        paymentMethodType:
          type: string
        account:
          $ref: '#/components/schemas/TransferAccount'
        bankAccount: {}
        wallet: {}
        card: {}
        achDetails:
          $ref: '#/components/schemas/AchTransactionDetails'
        applePay: {}
        cardDetails:
          $ref: '#/components/schemas/CardTransactionDetails'
        rtpDetails:
          $ref: '#/components/schemas/RtpTransactionDetails'
    TransferFacilitatorFee:
      type: object
      properties:
        total:
          type: integer
          format: int64
          description: Total facilitator fee in cents. Only either `total` or `totalDecimal` can be set.
        totalDecimal:
          type: string
          example: '12.987654321'
          pattern: ^\d+\.\d{1,9}$
          description: |-
            Same as `total`, but a decimal-formatted numerical string that represents up to 9 decimal place precision. 

            Only either `total` or `totalDecimal` can be set. Set this field if you expect the fee to be in fractions of a cent.
        markup:
          type: integer
          format: int64
          description: Markup facilitator fee in cents. Only either `markup` or `markupDecimal` can be set.
        markupDecimal:
          type: string
          example: '0.987654321'
          pattern: ^\d+\.\d{1,9}$
          description: |-
            Same as `markup`, but a decimal-formatted numerical string that represents up to 9 decimal place precision. 
            Only either `markup` or `markupDecimal` can be set. Set this field if you expect the fee to be in fractions of a cent.
      description: Total or markup fee.
    TransferFailureReason:
      type: string
      enum:
        - source-payment-error
        - destination-payment-error
        - wallet-insufficient-funds
        - rejected-high-risk
        - processing-error
      description: Reason for a transfer's failure.
    TransferSource:
      type: object
      required:
        - paymentMethodID
        - paymentMethodType
        - account
      properties:
        paymentMethodID:
          type: string
        paymentMethodType:
          type: string
        account:
          $ref: '#/components/schemas/TransferAccount'
        bankAccount: {}
        wallet: {}
        card: {}
        applePay: {}
        cardDetails:
          $ref: '#/components/schemas/CardTransactionDetails'
        achDetails:
          $ref: '#/components/schemas/AchTransactionDetails'
    TransferStatus:
      type: string
      enum:
        - created
        - pending
        - completed
        - failed
        - reversed
        - queued
        - canceled
      description: Status of a transfer.
    TransferValidationError:
      type: object
      properties:
        Transfer:
          type: string
        amount:
          type: string
        source:
          type: string
        sourcePaymentMethodID:
          type: string
        destinationPaymentMethodID:
          type: string
        description:
          type: string
        FacilitatorFee.TotalDecimal:
          type: string
        FacilitatorFee.MarkupDecimal:
          type: string
        metadata:
          type: string
        error:
          type: string
          description: Used for generic errors when invalid request data isn't attributed to a single request field.
    TransferWaitFor:
      type: string
      enum:
        - rail-response
    UpdateCard:
      type: object
      properties:
        e2ee:
          $ref: '#/components/schemas/End2EndEncryptionUpdate'
        billingAddress:
          $ref: '#/components/schemas/UpdateCardAddress'
        expiration:
          $ref: '#/components/schemas/UpdateCardExpiration'
        cardCvv:
          type: string
        cardOnFile:
          type: boolean
        merchantAccountID:
          type: string
        verifyName:
          type: boolean
        holderName:
          type: string
      example:
        cardCvv: '456'
    UpdateCardAddress:
      type: object
      properties:
        addressLine1:
          type: string
          maxLength: 60
        addressLine2:
          type: string
          maxLength: 32
        city:
          type: string
          maxLength: 24
        stateOrProvince:
          type: string
          maxLength: 2
        postalCode:
          type: string
          maxLength: 5
        country:
          type: string
          maxLength: 2
      example:
        addressLine1: 123 Main Street
        addressLine2: Apt 302
        city: Boulder
        stateOrProvince: CO
        postalCode: '80301'
        country: US
    UpdateCardError:
      type: object
      properties:
        e2ee:
          $ref: '#/components/schemas/End2EndEncryptionError'
        billingAddress:
          $ref: '#/components/schemas/CardAddressError'
        expiration:
          $ref: '#/components/schemas/CardExpirationError'
        cardCvv:
          type: string
        cardOnFile:
          type: string
        merchantAccountID:
          type: string
        verifyName:
          type: string
        holderName:
          type: string
    UpdateCardExpiration:
      type: object
      properties:
        month:
          type: string
        year:
          type: string
      example:
        month: '01'
        year: '21'
    Verification:
      type: object
      required:
        - status
      properties:
        verificationStatus:
          $ref: '#/components/schemas/AccountVerificationStatus'
        status:
          $ref: '#/components/schemas/VerificationStatus'
        details:
          $ref: '#/components/schemas/VerificationStatusDetail'
        documents:
          type: array
          items:
            $ref: '#/components/schemas/Document'
      description: Describes identity verification status and relevant identity verification documents.
    VerificationStatus:
      type: string
      enum:
        - unverified
        - pending
        - verified
        - errored
      description: Possible states an account verification can be in.
      deprecated: true
    VerificationStatusDetail:
      type: string
      enum:
        - failedAutoVerify
        - docDobMismatch
        - docNameMismatch
        - docAddressMismatch
        - docNumberMismatch
        - docIncomplete
        - docFailedRisk
        - potentialAccountSanctionsMatch
        - potentialRepresentativeSanctionsMatch
        - failedOther
      description: Additional detail for a verification status.
      deprecated: true
    Versions:
      type: string
      enum:
        - v2024.00.00
        - latest
      description: Moov API versions. Version strings are formatted as `vYYYY.MM.DD`, except preVerioned and latest.
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
    OAuth2Auth:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: /oauth2/authorize
          tokenUrl: /oauth2/token
          refreshUrl: /oauth2/token
          scopes:
            /accounts.write: ''
            /accounts.read: ''
            /accounts/{accountID}/profile.read: ''
            /accounts/{accountID}/capabilities.read: ''
            /accounts/{accountID}/cards.write: ''
            /accounts/{accountID}/cards.read: ''
            /accounts/{yourAccountID}/transfers.write: ''
            /accounts/{yourAccountID}/transfers.read: ''
            /accounts/{accountID}/transfers.read: ''
servers:
  - url: https://api.moov.io
    description: Production API host
    variables: {}
